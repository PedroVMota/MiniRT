==13992== Memcheck, a memory error detector
==13992== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==13992== Using Valgrind-3.16.1 and LibVEX; rerun with -h for copyright info
==13992== Command: ./miniRT scene.rt
==13992== Parent PID: 13991
==13992== 
==13992== Syscall param writev(vector[...]) points to uninitialised byte(s)
==13992==    at 0x4BFE34D: __writev (writev.c:26)
==13992==    by 0x4BFE34D: writev (writev.c:24)
==13992==    by 0x4CEFFB8: ??? (in /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0)
==13992==    by 0x4CF0380: xcb_writev (in /usr/lib/x86_64-linux-gnu/libxcb.so.1.1.0)
==13992==    by 0x48A807D: _XSend (in /usr/lib/x86_64-linux-gnu/libX11.so.6.4.0)
==13992==    by 0x48A849F: _XFlush (in /usr/lib/x86_64-linux-gnu/libX11.so.6.4.0)
==13992==    by 0x4889609: XFlush (in /usr/lib/x86_64-linux-gnu/libX11.so.6.4.0)
==13992==    by 0x10D1D9: render (main.c:116)
==13992==    by 0x10D37B: main (main.c:139)
==13992==  Address 0x4f51e5f is 31 bytes inside a block of size 16,384 alloc'd
==13992==    at 0x483AB65: calloc (vg_replace_malloc.c:760)
==13992==    by 0x4897F29: XOpenDisplay (in /usr/lib/x86_64-linux-gnu/libX11.so.6.4.0)
==13992==    by 0x10DF73: mlx_init (in /home/pedro/miniRT/miniRT)
==13992==    by 0x10D490: initialize_mlx (mlx.u.c:40)
==13992==    by 0x10D253: initialize_structs (main.c:125)
==13992==    by 0x10D371: main (main.c:138)
==13992== 
==13992== Invalid free() / delete / delete[] / realloc()
==13992==    at 0x48399AB: free (vg_replace_malloc.c:538)
==13992==    by 0x10CFED: key_hook (main.c:93)
==13992==    by 0x10E2F5: mlx_loop (in /home/pedro/miniRT/miniRT)
==13992==    by 0x10D3B0: main (main.c:141)
==13992==  Address 0x4f5e8f0 is 0 bytes inside a block of size 88 free'd
==13992==    at 0x48399AB: free (vg_replace_malloc.c:538)
==13992==    by 0x10ECE5: mlx_destroy_image (in /home/pedro/miniRT/miniRT)
==13992==    by 0x10CF97: key_hook (main.c:88)
==13992==    by 0x10E2F5: mlx_loop (in /home/pedro/miniRT/miniRT)
==13992==    by 0x10D3B0: main (main.c:141)
==13992==  Block was alloc'd at
==13992==    at 0x483AB65: calloc (vg_replace_malloc.c:760)
==13992==    by 0x10E507: mlx_int_new_xshm_image (in /home/pedro/miniRT/miniRT)
==13992==    by 0x10E81E: mlx_new_image (in /home/pedro/miniRT/miniRT)
==13992==    by 0x10D4ED: initialize_mlx (mlx.u.c:42)
==13992==    by 0x10D253: initialize_structs (main.c:125)
==13992==    by 0x10D371: main (main.c:138)
==13992== 
==13992== 
==13992== HEAP SUMMARY:
==13992==     in use at exit: 0 bytes in 0 blocks
==13992==   total heap usage: 246 allocs, 247 frees, 109,644 bytes allocated
==13992== 
==13992== All heap blocks were freed -- no leaks are possible
==13992== 
==13992== Use --track-origins=yes to see where uninitialised values come from
==13992== For lists of detected and suppressed errors, rerun with: -s
==13992== ERROR SUMMARY: 2 errors from 2 contexts (suppressed: 1 from 1)
